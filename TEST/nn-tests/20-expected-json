demo extended consent policy with incremental policy/condition build using meta-elements
reset conditions and policy before tests are run
{
  "respStatus":"success",
  "respMessage":"reset conditions",
  "respBody":"all"
}
set up the consent_ex policy root elements
{
  "respStatus":"success",
  "respMessage":"policy loaded immediate",
  "respBody":"consent_ex"
}
set current policy to consent_ex
{
  "respStatus":"success",
  "respMessage":"policy set",
  "respBody":"consent_ex"
}
fetch the policy
{
  "respStatus":"success",
  "respMessage":"read policy",
  "respBody":"policy(consent_ex, cpol_ex, [\n  purpose('p(v)'),\n  purpose('p(r)'),\n  purpose('p(s)'),\n  purpose('Purpose'),\n  data_type('pdc{1}'),\n  data_type('pdc{2}'),\n  data_type('Personal Data Category'),\n  operation('dpo(u)'),\n  operation('dpo(w)'),\n  operation('dpo(z)'),\n  operation('Processing'),\n  user_attribute(data_controllers),\n  object_attribute(data_subjects),\n  assign('pdc{1}','Personal Data Category'),\n  assign('pdc{2}','Personal Data Category'),\n  assign('dpo(u)','Processing'),\n  assign('dpo(w)','Processing'),\n  assign('dpo(z)','Processing'),\n  assign('p(v)','Purpose'),\n  assign('p(r)','Purpose'),\n  assign('p(s)','Purpose'),\n  assign(cpol_ex,'PM'),\n  assign(data_controllers,cpol_ex),\n  assign(data_subjects,cpol_ex),\n  assign('Purpose',cpol_ex),\n  assign('Processing',cpol_ex),\n  assign('Personal Data Category',cpol_ex),\n  dplp_policy_base(cpol_ex,testdefs2),\n  policy_class(cpol_ex),\n  connector('PM')\n], dplp).\n"
}
add a Data Controller (DC)
{
  "respStatus":"success",
  "respMessage":"elements added",
  "respBody":"[data_controller('dc[x]',[])]"
}
fetch the policy
{
  "respStatus":"success",
  "respMessage":"read policy",
  "respBody":"policy(consent_ex, cpol_ex, [\n  purpose('p(v)'),\n  purpose('p(r)'),\n  purpose('p(s)'),\n  purpose('Purpose'),\n  data_type('pdc{1}'),\n  data_type('pdc{2}'),\n  data_type('Personal Data Category'),\n  operation('dpo(u)'),\n  operation('dpo(w)'),\n  operation('dpo(z)'),\n  operation('Processing'),\n  user_attribute(data_controllers),\n  user_attribute('dc[x]'),\n  object_attribute(data_subjects),\n  assign('pdc{1}','Personal Data Category'),\n  assign('pdc{2}','Personal Data Category'),\n  assign('dpo(u)','Processing'),\n  assign('dpo(w)','Processing'),\n  assign('dpo(z)','Processing'),\n  assign('p(v)','Purpose'),\n  assign('p(r)','Purpose'),\n  assign('p(s)','Purpose'),\n  assign(cpol_ex,'PM'),\n  assign(data_controllers,cpol_ex),\n  assign(data_subjects,cpol_ex),\n  assign('Purpose',cpol_ex),\n  assign('Processing',cpol_ex),\n  assign('Personal Data Category',cpol_ex),\n  assign('dc[x]',data_controllers),\n  privacy_policy('dc[x]',[]),\n  dplp_policy_base(cpol_ex,testdefs2),\n  data_controller('dc[x]',[]),\n  policy_class(cpol_ex),\n  connector('PM')\n], dplp).\n"
}
add a Data Processor (DP)
{
  "respStatus":"success",
  "respMessage":"elements added",
  "respBody":"[data_processor('dp[y][x]',[],'dc[x]')]"
}
fetch the policy
{
  "respStatus":"success",
  "respMessage":"read policy",
  "respBody":"policy(consent_ex, cpol_ex, [\n  purpose('p(v)'),\n  purpose('p(r)'),\n  purpose('p(s)'),\n  purpose('Purpose'),\n  data_type('pdc{1}'),\n  data_type('pdc{2}'),\n  data_type('Personal Data Category'),\n  operation('dpo(u)'),\n  operation('dpo(w)'),\n  operation('dpo(z)'),\n  operation('Processing'),\n  user('dp[y][x]'),\n  user_attribute(data_controllers),\n  user_attribute('dc[x]'),\n  object_attribute(data_subjects),\n  assign('pdc{1}','Personal Data Category'),\n  assign('pdc{2}','Personal Data Category'),\n  assign('dpo(u)','Processing'),\n  assign('dpo(w)','Processing'),\n  assign('dpo(z)','Processing'),\n  assign('p(v)','Purpose'),\n  assign('p(r)','Purpose'),\n  assign('p(s)','Purpose'),\n  assign(cpol_ex,'PM'),\n  assign(data_controllers,cpol_ex),\n  assign(data_subjects,cpol_ex),\n  assign('Purpose',cpol_ex),\n  assign('Processing',cpol_ex),\n  assign('Personal Data Category',cpol_ex),\n  assign('dc[x]',data_controllers),\n  assign('dp[y][x]','dc[x]'),\n  privacy_policy('dc[x]',[]),\n  privacy_policy('dp[y][x]',[]),\n  dplp_policy_base(cpol_ex,testdefs2),\n  data_controller('dc[x]',[]),\n  data_processor('dp[y][x]',[],'dc[x]'),\n  policy_class(cpol_ex),\n  connector('PM')\n], dplp).\n"
}
add a Data Subject (DS)
{
  "respStatus":"success",
  "respMessage":"elements added",
  "respBody":"[data_subject('ds[1]',['pdi(1)[1]':'pdc{1}'],[])]"
}
fetch the policy
{
  "respStatus":"success",
  "respMessage":"read policy",
  "respBody":"policy(consent_ex, cpol_ex, [\n  purpose('p(v)'),\n  purpose('p(r)'),\n  purpose('p(s)'),\n  purpose('Purpose'),\n  data_type('pdc{1}'),\n  data_type('pdc{2}'),\n  data_type('Personal Data Category'),\n  operation('dpo(u)'),\n  operation('dpo(w)'),\n  operation('dpo(z)'),\n  operation('Processing'),\n  user('dp[y][x]'),\n  user_attribute(data_controllers),\n  user_attribute('dc[x]'),\n  object('pdi(1)[1]'),\n  object_attribute(data_subjects),\n  object_attribute('ds[1]'),\n  assign('pdc{1}','Personal Data Category'),\n  assign('pdc{2}','Personal Data Category'),\n  assign('dpo(u)','Processing'),\n  assign('dpo(w)','Processing'),\n  assign('dpo(z)','Processing'),\n  assign('p(v)','Purpose'),\n  assign('p(r)','Purpose'),\n  assign('p(s)','Purpose'),\n  assign(cpol_ex,'PM'),\n  assign(data_controllers,cpol_ex),\n  assign(data_subjects,cpol_ex),\n  assign('Purpose',cpol_ex),\n  assign('Processing',cpol_ex),\n  assign('Personal Data Category',cpol_ex),\n  assign('dc[x]',data_controllers),\n  assign('dp[y][x]','dc[x]'),\n  assign('ds[1]',data_subjects),\n  assign('pdi(1)[1]','ds[1]'),\n  assign('pdi(1)[1]','pdc{1}'),\n  privacy_policy('dc[x]',[]),\n  privacy_policy('dp[y][x]',[]),\n  privacy_preference('ds[1]',[]),\n  dplp_policy_base(cpol_ex,testdefs2),\n  data_controller('dc[x]',[]),\n  data_processor('dp[y][x]',[],'dc[x]'),\n  data_subject('ds[1]',['pdi(1)[1]':'pdc{1}'],[]),\n  data_item('pdi(1)[1]','pdc{1}','ds[1]'),\n  policy_class(cpol_ex),\n  connector('PM')\n], dplp).\n"
}
add another personal data item (PDI)
{
  "respStatus":"success",
  "respMessage":"elements added",
  "respBody":"[data_item('pdi(2)[1]','pdc{2}','ds[1]')]"
}
fetch the policy
{
  "respStatus":"success",
  "respMessage":"read policy",
  "respBody":"policy(consent_ex, cpol_ex, [\n  purpose('p(v)'),\n  purpose('p(r)'),\n  purpose('p(s)'),\n  purpose('Purpose'),\n  data_type('pdc{1}'),\n  data_type('pdc{2}'),\n  data_type('Personal Data Category'),\n  operation('dpo(u)'),\n  operation('dpo(w)'),\n  operation('dpo(z)'),\n  operation('Processing'),\n  user('dp[y][x]'),\n  user_attribute(data_controllers),\n  user_attribute('dc[x]'),\n  object('pdi(1)[1]'),\n  object('pdi(2)[1]'),\n  object_attribute(data_subjects),\n  object_attribute('ds[1]'),\n  assign('pdc{1}','Personal Data Category'),\n  assign('pdc{2}','Personal Data Category'),\n  assign('dpo(u)','Processing'),\n  assign('dpo(w)','Processing'),\n  assign('dpo(z)','Processing'),\n  assign('p(v)','Purpose'),\n  assign('p(r)','Purpose'),\n  assign('p(s)','Purpose'),\n  assign(cpol_ex,'PM'),\n  assign(data_controllers,cpol_ex),\n  assign(data_subjects,cpol_ex),\n  assign('Purpose',cpol_ex),\n  assign('Processing',cpol_ex),\n  assign('Personal Data Category',cpol_ex),\n  assign('dc[x]',data_controllers),\n  assign('dp[y][x]','dc[x]'),\n  assign('ds[1]',data_subjects),\n  assign('pdi(1)[1]','ds[1]'),\n  assign('pdi(1)[1]','pdc{1}'),\n  assign('pdi(2)[1]','ds[1]'),\n  assign('pdi(2)[1]','pdc{2}'),\n  privacy_policy('dc[x]',[]),\n  privacy_policy('dp[y][x]',[]),\n  privacy_preference('ds[1]',[]),\n  dplp_policy_base(cpol_ex,testdefs2),\n  data_controller('dc[x]',[]),\n  data_processor('dp[y][x]',[],'dc[x]'),\n  data_subject('ds[1]',['pdi(1)[1]':'pdc{1}'],[]),\n  data_item('pdi(1)[1]','pdc{1}','ds[1]'),\n  data_item('pdi(2)[1]','pdc{2}','ds[1]'),\n  policy_class(cpol_ex),\n  connector('PM')\n], dplp).\n"
}
now add the first consent to the policy
{
  "respStatus":"success",
  "respMessage":"elements added",
  "respBody":"[consent(cID_234,'dc[x]','dp[y][x]','app(a,y,x)',['dpo(z)'],'p(v)','ds[1]','pdi(1)[1]','pdc{1}',true)]"
}
fetch the policy
{
  "respStatus":"success",
  "respMessage":"read policy",
  "respBody":"policy(consent_ex, cpol_ex, [\n  purpose('p(v)'),\n  purpose('p(r)'),\n  purpose('p(s)'),\n  purpose('Purpose'),\n  data_type('pdc{1}'),\n  data_type('pdc{2}'),\n  data_type('Personal Data Category'),\n  operation('dpo(u)'),\n  operation('dpo(w)'),\n  operation('dpo(z)'),\n  operation('Processing'),\n  user('dp[y][x]'),\n  user_attribute(data_controllers),\n  user_attribute('dc[x]'),\n  user_attribute(cUA_234),\n  object('pdi(1)[1]'),\n  object('pdi(2)[1]'),\n  object_attribute(data_subjects),\n  object_attribute('ds[1]'),\n  object_attribute(cOA_234),\n  assign('pdc{1}','Personal Data Category'),\n  assign('pdc{2}','Personal Data Category'),\n  assign('dpo(u)','Processing'),\n  assign('dpo(w)','Processing'),\n  assign('dpo(z)','Processing'),\n  assign('p(v)','Purpose'),\n  assign('p(r)','Purpose'),\n  assign('p(s)','Purpose'),\n  assign(cpol_ex,'PM'),\n  assign(data_controllers,cpol_ex),\n  assign(data_subjects,cpol_ex),\n  assign('Purpose',cpol_ex),\n  assign('Processing',cpol_ex),\n  assign('Personal Data Category',cpol_ex),\n  assign('dc[x]',data_controllers),\n  assign('dp[y][x]','dc[x]'),\n  assign('ds[1]',data_subjects),\n  assign('pdi(1)[1]','ds[1]'),\n  assign('pdi(1)[1]','pdc{1}'),\n  assign('pdi(2)[1]','ds[1]'),\n  assign('pdi(2)[1]','pdc{2}'),\n  assign('dp[y][x]',cUA_234),\n  assign(cUA_234,'dc[x]'),\n  assign('pdi(1)[1]',cOA_234),\n  assign(cOA_234,'ds[1]'),\n  associate(cUA_234,['dpo(z)'],'p(v)',cOA_234),\n  privacy_policy('dc[x]',[]),\n  privacy_policy('dp[y][x]',[]),\n  privacy_preference('ds[1]',[]),\n  dplp_policy_base(cpol_ex,testdefs2),\n  data_controller('dc[x]',[]),\n  data_processor('dp[y][x]',[],'dc[x]'),\n  data_subject('ds[1]',['pdi(1)[1]':'pdc{1}'],[]),\n  data_item('pdi(1)[1]','pdc{1}','ds[1]'),\n  data_item('pdi(2)[1]','pdc{2}','ds[1]'),\n  consent(cID_234,'dc[x]','dp[y][x]','app(a,y,x)',['dpo(z)'],'p(v)','ds[1]','pdi(1)[1]','pdc{1}',true),\n  policy_class(cpol_ex),\n  connector('PM')\n], dplp).\n"
}
read the conditions
{
  "respStatus":"success",
  "respMessage":"read conditions",
  "respBody":"conditions(dynamic):\n"
}
query the policy for an access - expect grant
{
  "respStatus":"success",
  "respMessage":"grant",
  "respBody":"'dp[y][x]','dpo(z)','p(v)','pdi(1)[1]'"
}
delete the consent meta-element
{
  "respStatus":"success",
  "respMessage":"consent deleted",
  "respBody":"consent(cID_234)"
}
fetch the policy
{
  "respStatus":"success",
  "respMessage":"read policy",
  "respBody":"policy(consent_ex, cpol_ex, [\n  purpose('p(v)'),\n  purpose('p(r)'),\n  purpose('p(s)'),\n  purpose('Purpose'),\n  data_type('pdc{1}'),\n  data_type('pdc{2}'),\n  data_type('Personal Data Category'),\n  operation('dpo(u)'),\n  operation('dpo(w)'),\n  operation('dpo(z)'),\n  operation('Processing'),\n  user('dp[y][x]'),\n  user_attribute(data_controllers),\n  user_attribute('dc[x]'),\n  object('pdi(1)[1]'),\n  object('pdi(2)[1]'),\n  object_attribute(data_subjects),\n  object_attribute('ds[1]'),\n  assign('pdc{1}','Personal Data Category'),\n  assign('pdc{2}','Personal Data Category'),\n  assign('dpo(u)','Processing'),\n  assign('dpo(w)','Processing'),\n  assign('dpo(z)','Processing'),\n  assign('p(v)','Purpose'),\n  assign('p(r)','Purpose'),\n  assign('p(s)','Purpose'),\n  assign(cpol_ex,'PM'),\n  assign(data_controllers,cpol_ex),\n  assign(data_subjects,cpol_ex),\n  assign('Purpose',cpol_ex),\n  assign('Processing',cpol_ex),\n  assign('Personal Data Category',cpol_ex),\n  assign('dc[x]',data_controllers),\n  assign('dp[y][x]','dc[x]'),\n  assign('ds[1]',data_subjects),\n  assign('pdi(1)[1]','ds[1]'),\n  assign('pdi(1)[1]','pdc{1}'),\n  assign('pdi(2)[1]','ds[1]'),\n  assign('pdi(2)[1]','pdc{2}'),\n  privacy_policy('dc[x]',[]),\n  privacy_policy('dp[y][x]',[]),\n  privacy_preference('ds[1]',[]),\n  dplp_policy_base(cpol_ex,testdefs2),\n  data_controller('dc[x]',[]),\n  data_processor('dp[y][x]',[],'dc[x]'),\n  data_subject('ds[1]',['pdi(1)[1]':'pdc{1}'],[]),\n  data_item('pdi(1)[1]','pdc{1}','ds[1]'),\n  data_item('pdi(2)[1]','pdc{2}','ds[1]'),\n  policy_class(cpol_ex),\n  connector('PM')\n], dplp).\n"
}
query the policy for an access - expect deny
{
  "respStatus":"success",
  "respMessage":"deny",
  "respBody":"'dp[y][x]','dpo(z)','p(v)','pdi(1)[1]'"
}
now add back the first consent to the policy
{
  "respStatus":"success",
  "respMessage":"elements added",
  "respBody":"[consent(cID_234,'dc[x]','dp[y][x]','app(a,y,x)',['dpo(z)'],'p(v)','ds[1]','pdi(1)[1]','pdc{1}',true)]"
}
add a second Data Subject (DS)
{
  "respStatus":"success",
  "respMessage":"elements added",
  "respBody":"[data_subject('ds[2]',[],[])]"
}
add a personal data item to second subject(PDI)
{
  "respStatus":"success",
  "respMessage":"elements added",
  "respBody":"[data_item('pdi(1)[2]','pdc{1}','ds[2]')]"
}
add consent for second DS and data item
{
  "respStatus":"success",
  "respMessage":"elements added",
  "respBody":"[consent(cID_567,'dc[x]','dp[y][x]','app(a,y,x)',['dpo(z)'],'p(v)','ds[2]','pdi(1)[2]','pdc{1}',true)]"
}
fetch the policy
{
  "respStatus":"success",
  "respMessage":"read policy",
  "respBody":"policy(consent_ex, cpol_ex, [\n  purpose('p(v)'),\n  purpose('p(r)'),\n  purpose('p(s)'),\n  purpose('Purpose'),\n  data_type('pdc{1}'),\n  data_type('pdc{2}'),\n  data_type('Personal Data Category'),\n  operation('dpo(u)'),\n  operation('dpo(w)'),\n  operation('dpo(z)'),\n  operation('Processing'),\n  user('dp[y][x]'),\n  user_attribute(data_controllers),\n  user_attribute('dc[x]'),\n  user_attribute(cUA_234),\n  user_attribute(cUA_567),\n  object('pdi(1)[1]'),\n  object('pdi(2)[1]'),\n  object('pdi(1)[2]'),\n  object_attribute(data_subjects),\n  object_attribute('ds[1]'),\n  object_attribute(cOA_234),\n  object_attribute('ds[2]'),\n  object_attribute(cOA_567),\n  assign('pdc{1}','Personal Data Category'),\n  assign('pdc{2}','Personal Data Category'),\n  assign('dpo(u)','Processing'),\n  assign('dpo(w)','Processing'),\n  assign('dpo(z)','Processing'),\n  assign('p(v)','Purpose'),\n  assign('p(r)','Purpose'),\n  assign('p(s)','Purpose'),\n  assign(cpol_ex,'PM'),\n  assign(data_controllers,cpol_ex),\n  assign(data_subjects,cpol_ex),\n  assign('Purpose',cpol_ex),\n  assign('Processing',cpol_ex),\n  assign('Personal Data Category',cpol_ex),\n  assign('dc[x]',data_controllers),\n  assign('dp[y][x]','dc[x]'),\n  assign('ds[1]',data_subjects),\n  assign('pdi(1)[1]','ds[1]'),\n  assign('pdi(1)[1]','pdc{1}'),\n  assign('pdi(2)[1]','ds[1]'),\n  assign('pdi(2)[1]','pdc{2}'),\n  assign('dp[y][x]',cUA_234),\n  assign(cUA_234,'dc[x]'),\n  assign('pdi(1)[1]',cOA_234),\n  assign(cOA_234,'ds[1]'),\n  assign('ds[2]',data_subjects),\n  assign('pdi(1)[2]','ds[2]'),\n  assign('pdi(1)[2]','pdc{1}'),\n  assign('dp[y][x]',cUA_567),\n  assign(cUA_567,'dc[x]'),\n  assign('pdi(1)[2]',cOA_567),\n  assign(cOA_567,'ds[2]'),\n  associate(cUA_234,['dpo(z)'],'p(v)',cOA_234),\n  associate(cUA_567,['dpo(z)'],'p(v)',cOA_567),\n  privacy_policy('dc[x]',[]),\n  privacy_policy('dp[y][x]',[]),\n  privacy_preference('ds[1]',[]),\n  privacy_preference('ds[2]',[]),\n  dplp_policy_base(cpol_ex,testdefs2),\n  data_controller('dc[x]',[]),\n  data_processor('dp[y][x]',[],'dc[x]'),\n  data_subject('ds[1]',['pdi(1)[1]':'pdc{1}'],[]),\n  data_subject('ds[2]',[],[]),\n  data_item('pdi(1)[1]','pdc{1}','ds[1]'),\n  data_item('pdi(2)[1]','pdc{2}','ds[1]'),\n  data_item('pdi(1)[2]','pdc{1}','ds[2]'),\n  consent(cID_234,'dc[x]','dp[y][x]','app(a,y,x)',['dpo(z)'],'p(v)','ds[1]','pdi(1)[1]','pdc{1}',true),\n  consent(cID_567,'dc[x]','dp[y][x]','app(a,y,x)',['dpo(z)'],'p(v)','ds[2]','pdi(1)[2]','pdc{1}',true),\n  policy_class(cpol_ex),\n  connector('PM')\n], dplp).\n"
}
query the policy for an access for DS 1 - expect grant
{
  "respStatus":"success",
  "respMessage":"grant",
  "respBody":"'dp[y][x]','dpo(z)','p(v)','pdi(1)[1]'"
}
query the policy for an access for DS 2 - expect grant
{
  "respStatus":"success",
  "respMessage":"grant",
  "respBody":"'dp[y][x]','dpo(z)','p(v)','pdi(1)[2]'"
}
delete the consent meta-element for DS 1
{
  "respStatus":"success",
  "respMessage":"consent deleted",
  "respBody":"consent(cID_234)"
}
query the policy for an access for DS 1 - expect deny
{
  "respStatus":"success",
  "respMessage":"deny",
  "respBody":"'dp[y][x]','dpo(z)','p(v)','pdi(1)[1]'"
}
query the policy for an access for DS 2 - expect grant
{
  "respStatus":"success",
  "respMessage":"grant",
  "respBody":"'dp[y][x]','dpo(z)','p(v)','pdi(1)[2]'"
}
delete the consent meta-element for DS 2
{
  "respStatus":"success",
  "respMessage":"elements deleted",
  "respBody":"consent_ex:cID_567"
}
fetch the policy
{
  "respStatus":"success",
  "respMessage":"read policy",
  "respBody":"policy(consent_ex, cpol_ex, [\n  purpose('p(v)'),\n  purpose('p(r)'),\n  purpose('p(s)'),\n  purpose('Purpose'),\n  data_type('pdc{1}'),\n  data_type('pdc{2}'),\n  data_type('Personal Data Category'),\n  operation('dpo(u)'),\n  operation('dpo(w)'),\n  operation('dpo(z)'),\n  operation('Processing'),\n  user('dp[y][x]'),\n  user_attribute(data_controllers),\n  user_attribute('dc[x]'),\n  object('pdi(1)[1]'),\n  object('pdi(2)[1]'),\n  object('pdi(1)[2]'),\n  object_attribute(data_subjects),\n  object_attribute('ds[1]'),\n  object_attribute('ds[2]'),\n  assign('pdc{1}','Personal Data Category'),\n  assign('pdc{2}','Personal Data Category'),\n  assign('dpo(u)','Processing'),\n  assign('dpo(w)','Processing'),\n  assign('dpo(z)','Processing'),\n  assign('p(v)','Purpose'),\n  assign('p(r)','Purpose'),\n  assign('p(s)','Purpose'),\n  assign(cpol_ex,'PM'),\n  assign(data_controllers,cpol_ex),\n  assign(data_subjects,cpol_ex),\n  assign('Purpose',cpol_ex),\n  assign('Processing',cpol_ex),\n  assign('Personal Data Category',cpol_ex),\n  assign('dc[x]',data_controllers),\n  assign('dp[y][x]','dc[x]'),\n  assign('ds[1]',data_subjects),\n  assign('pdi(1)[1]','ds[1]'),\n  assign('pdi(1)[1]','pdc{1}'),\n  assign('pdi(2)[1]','ds[1]'),\n  assign('pdi(2)[1]','pdc{2}'),\n  assign('ds[2]',data_subjects),\n  assign('pdi(1)[2]','ds[2]'),\n  assign('pdi(1)[2]','pdc{1}'),\n  privacy_policy('dc[x]',[]),\n  privacy_policy('dp[y][x]',[]),\n  privacy_preference('ds[1]',[]),\n  privacy_preference('ds[2]',[]),\n  dplp_policy_base(cpol_ex,testdefs2),\n  data_controller('dc[x]',[]),\n  data_processor('dp[y][x]',[],'dc[x]'),\n  data_subject('ds[1]',['pdi(1)[1]':'pdc{1}'],[]),\n  data_subject('ds[2]',[],[]),\n  data_item('pdi(1)[1]','pdc{1}','ds[1]'),\n  data_item('pdi(2)[1]','pdc{2}','ds[1]'),\n  data_item('pdi(1)[2]','pdc{1}','ds[2]'),\n  policy_class(cpol_ex),\n  connector('PM')\n], dplp).\n"
}
query the policy for an access for DS 1 - expect deny
{
  "respStatus":"success",
  "respMessage":"deny",
  "respBody":"'dp[y][x]','dpo(z)','p(v)','pdi(1)[1]'"
}
query the policy for an access for DS 2 - expect deny
{
  "respStatus":"success",
  "respMessage":"deny",
  "respBody":"'dp[y][x]','dpo(z)','p(v)','pdi(1)[2]'"
}
